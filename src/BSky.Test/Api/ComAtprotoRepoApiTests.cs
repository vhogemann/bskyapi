/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using BSky.Client;
using BSky.Api;
// uncomment below to import models
//using BSky.Model;

namespace BSky.Test.Api
{
    /// <summary>
    ///  Class for testing ComAtprotoRepoApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ComAtprotoRepoApiTests : IDisposable
    {
        private ComAtprotoRepoApi instance;

        public ComAtprotoRepoApiTests()
        {
            instance = new ComAtprotoRepoApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ComAtprotoRepoApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ComAtprotoRepoApi
            //Assert.IsType<ComAtprotoRepoApi>(instance);
        }

        /// <summary>
        /// Test ComAtprotoRepoApplyWrites
        /// </summary>
        [Fact]
        public void ComAtprotoRepoApplyWritesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ComAtprotoRepoApplyWritesRequest comAtprotoRepoApplyWritesRequest = null;
            //var response = instance.ComAtprotoRepoApplyWrites(comAtprotoRepoApplyWritesRequest);
            //Assert.IsType<ComAtprotoRepoApplyWrites200Response>(response);
        }

        /// <summary>
        /// Test ComAtprotoRepoCreateRecord
        /// </summary>
        [Fact]
        public void ComAtprotoRepoCreateRecordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ComAtprotoRepoCreateRecordRequest comAtprotoRepoCreateRecordRequest = null;
            //var response = instance.ComAtprotoRepoCreateRecord(comAtprotoRepoCreateRecordRequest);
            //Assert.IsType<ComAtprotoRepoCreateRecord200Response>(response);
        }

        /// <summary>
        /// Test ComAtprotoRepoDeleteRecord
        /// </summary>
        [Fact]
        public void ComAtprotoRepoDeleteRecordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ComAtprotoRepoDeleteRecordRequest comAtprotoRepoDeleteRecordRequest = null;
            //var response = instance.ComAtprotoRepoDeleteRecord(comAtprotoRepoDeleteRecordRequest);
            //Assert.IsType<ComAtprotoRepoDeleteRecord200Response>(response);
        }

        /// <summary>
        /// Test ComAtprotoRepoDescribeRepo
        /// </summary>
        [Fact]
        public void ComAtprotoRepoDescribeRepoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string repo = null;
            //var response = instance.ComAtprotoRepoDescribeRepo(repo);
            //Assert.IsType<ComAtprotoRepoDescribeRepo200Response>(response);
        }

        /// <summary>
        /// Test ComAtprotoRepoGetRecord
        /// </summary>
        [Fact]
        public void ComAtprotoRepoGetRecordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string repo = null;
            //string collection = null;
            //string rkey = null;
            //string? cid = null;
            //var response = instance.ComAtprotoRepoGetRecord(repo, collection, rkey, cid);
            //Assert.IsType<ComAtprotoRepoGetRecord200Response>(response);
        }

        /// <summary>
        /// Test ComAtprotoRepoImportRepo
        /// </summary>
        [Fact]
        public void ComAtprotoRepoImportRepoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.ComAtprotoRepoImportRepo();
        }

        /// <summary>
        /// Test ComAtprotoRepoListMissingBlobs
        /// </summary>
        [Fact]
        public void ComAtprotoRepoListMissingBlobsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //string? cursor = null;
            //var response = instance.ComAtprotoRepoListMissingBlobs(limit, cursor);
            //Assert.IsType<ComAtprotoRepoListMissingBlobs200Response>(response);
        }

        /// <summary>
        /// Test ComAtprotoRepoListRecords
        /// </summary>
        [Fact]
        public void ComAtprotoRepoListRecordsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string repo = null;
            //string collection = null;
            //int? limit = null;
            //string? cursor = null;
            //bool? reverse = null;
            //var response = instance.ComAtprotoRepoListRecords(repo, collection, limit, cursor, reverse);
            //Assert.IsType<ComAtprotoRepoListRecords200Response>(response);
        }

        /// <summary>
        /// Test ComAtprotoRepoPutRecord
        /// </summary>
        [Fact]
        public void ComAtprotoRepoPutRecordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ComAtprotoRepoPutRecordRequest comAtprotoRepoPutRecordRequest = null;
            //var response = instance.ComAtprotoRepoPutRecord(comAtprotoRepoPutRecordRequest);
            //Assert.IsType<ComAtprotoRepoCreateRecord200Response>(response);
        }

        /// <summary>
        /// Test ComAtprotoRepoUploadBlob
        /// </summary>
        [Fact]
        public void ComAtprotoRepoUploadBlobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ComAtprotoRepoUploadBlob();
            //Assert.IsType<ComAtprotoRepoUploadBlob200Response>(response);
        }
    }
}
