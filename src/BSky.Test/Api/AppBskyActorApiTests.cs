/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using BSky.Client;
using BSky.Api;
// uncomment below to import models
//using BSky.Model;

namespace BSky.Test.Api
{
    /// <summary>
    ///  Class for testing AppBskyActorApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AppBskyActorApiTests : IDisposable
    {
        private AppBskyActorApi instance;

        public AppBskyActorApiTests()
        {
            instance = new AppBskyActorApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AppBskyActorApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AppBskyActorApi
            //Assert.IsType<AppBskyActorApi>(instance);
        }

        /// <summary>
        /// Test AppBskyActorGetPreferences
        /// </summary>
        [Fact]
        public void AppBskyActorGetPreferencesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.AppBskyActorGetPreferences();
            //Assert.IsType<AppBskyActorGetPreferences200Response>(response);
        }

        /// <summary>
        /// Test AppBskyActorGetProfile
        /// </summary>
        [Fact]
        public void AppBskyActorGetProfileTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string actor = null;
            //var response = instance.AppBskyActorGetProfile(actor);
            //Assert.IsType<AppBskyActorDefsProfileViewDetailed>(response);
        }

        /// <summary>
        /// Test AppBskyActorGetProfiles
        /// </summary>
        [Fact]
        public void AppBskyActorGetProfilesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> actors = null;
            //var response = instance.AppBskyActorGetProfiles(actors);
            //Assert.IsType<AppBskyActorGetProfiles200Response>(response);
        }

        /// <summary>
        /// Test AppBskyActorGetSuggestions
        /// </summary>
        [Fact]
        public void AppBskyActorGetSuggestionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //string? cursor = null;
            //var response = instance.AppBskyActorGetSuggestions(limit, cursor);
            //Assert.IsType<AppBskyActorGetSuggestions200Response>(response);
        }

        /// <summary>
        /// Test AppBskyActorPutPreferences
        /// </summary>
        [Fact]
        public void AppBskyActorPutPreferencesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AppBskyActorGetPreferences200Response appBskyActorGetPreferences200Response = null;
            //instance.AppBskyActorPutPreferences(appBskyActorGetPreferences200Response);
        }

        /// <summary>
        /// Test AppBskyActorSearchActors
        /// </summary>
        [Fact]
        public void AppBskyActorSearchActorsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? q = null;
            //int? limit = null;
            //string? cursor = null;
            //var response = instance.AppBskyActorSearchActors(q, limit, cursor);
            //Assert.IsType<AppBskyActorGetSuggestions200Response>(response);
        }

        /// <summary>
        /// Test AppBskyActorSearchActorsTypeahead
        /// </summary>
        [Fact]
        public void AppBskyActorSearchActorsTypeaheadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? q = null;
            //int? limit = null;
            //var response = instance.AppBskyActorSearchActorsTypeahead(q, limit);
            //Assert.IsType<AppBskyActorSearchActorsTypeahead200Response>(response);
        }
    }
}
