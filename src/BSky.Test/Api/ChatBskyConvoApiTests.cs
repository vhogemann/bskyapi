/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using BSky.Client;
using BSky.Api;
// uncomment below to import models
//using BSky.Model;

namespace BSky.Test.Api
{
    /// <summary>
    ///  Class for testing ChatBskyConvoApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ChatBskyConvoApiTests : IDisposable
    {
        private ChatBskyConvoApi instance;

        public ChatBskyConvoApiTests()
        {
            instance = new ChatBskyConvoApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ChatBskyConvoApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ChatBskyConvoApi
            //Assert.IsType<ChatBskyConvoApi>(instance);
        }

        /// <summary>
        /// Test ChatBskyConvoDeleteMessageForSelf
        /// </summary>
        [Fact]
        public void ChatBskyConvoDeleteMessageForSelfTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChatBskyConvoDeleteMessageForSelfRequest chatBskyConvoDeleteMessageForSelfRequest = null;
            //var response = instance.ChatBskyConvoDeleteMessageForSelf(chatBskyConvoDeleteMessageForSelfRequest);
            //Assert.IsType<ChatBskyConvoDefsDeletedMessageView>(response);
        }

        /// <summary>
        /// Test ChatBskyConvoGetConvo
        /// </summary>
        [Fact]
        public void ChatBskyConvoGetConvoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string convoId = null;
            //var response = instance.ChatBskyConvoGetConvo(convoId);
            //Assert.IsType<ChatBskyConvoGetConvo200Response>(response);
        }

        /// <summary>
        /// Test ChatBskyConvoGetConvoForMembers
        /// </summary>
        [Fact]
        public void ChatBskyConvoGetConvoForMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> members = null;
            //var response = instance.ChatBskyConvoGetConvoForMembers(members);
            //Assert.IsType<ChatBskyConvoGetConvo200Response>(response);
        }

        /// <summary>
        /// Test ChatBskyConvoGetLog
        /// </summary>
        [Fact]
        public void ChatBskyConvoGetLogTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? cursor = null;
            //var response = instance.ChatBskyConvoGetLog(cursor);
            //Assert.IsType<ChatBskyConvoGetLog200Response>(response);
        }

        /// <summary>
        /// Test ChatBskyConvoGetMessages
        /// </summary>
        [Fact]
        public void ChatBskyConvoGetMessagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string convoId = null;
            //int? limit = null;
            //string? cursor = null;
            //var response = instance.ChatBskyConvoGetMessages(convoId, limit, cursor);
            //Assert.IsType<ChatBskyConvoGetMessages200Response>(response);
        }

        /// <summary>
        /// Test ChatBskyConvoLeaveConvo
        /// </summary>
        [Fact]
        public void ChatBskyConvoLeaveConvoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChatBskyConvoLeaveConvoRequest chatBskyConvoLeaveConvoRequest = null;
            //var response = instance.ChatBskyConvoLeaveConvo(chatBskyConvoLeaveConvoRequest);
            //Assert.IsType<ChatBskyConvoLeaveConvo200Response>(response);
        }

        /// <summary>
        /// Test ChatBskyConvoListConvos
        /// </summary>
        [Fact]
        public void ChatBskyConvoListConvosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //string? cursor = null;
            //var response = instance.ChatBskyConvoListConvos(limit, cursor);
            //Assert.IsType<ChatBskyConvoListConvos200Response>(response);
        }

        /// <summary>
        /// Test ChatBskyConvoMuteConvo
        /// </summary>
        [Fact]
        public void ChatBskyConvoMuteConvoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChatBskyConvoLeaveConvoRequest chatBskyConvoLeaveConvoRequest = null;
            //var response = instance.ChatBskyConvoMuteConvo(chatBskyConvoLeaveConvoRequest);
            //Assert.IsType<ChatBskyConvoGetConvo200Response>(response);
        }

        /// <summary>
        /// Test ChatBskyConvoSendMessage
        /// </summary>
        [Fact]
        public void ChatBskyConvoSendMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChatBskyConvoSendMessageRequest chatBskyConvoSendMessageRequest = null;
            //var response = instance.ChatBskyConvoSendMessage(chatBskyConvoSendMessageRequest);
            //Assert.IsType<ChatBskyConvoDefsMessageView>(response);
        }

        /// <summary>
        /// Test ChatBskyConvoSendMessageBatch
        /// </summary>
        [Fact]
        public void ChatBskyConvoSendMessageBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChatBskyConvoSendMessageBatchRequest chatBskyConvoSendMessageBatchRequest = null;
            //var response = instance.ChatBskyConvoSendMessageBatch(chatBskyConvoSendMessageBatchRequest);
            //Assert.IsType<ChatBskyConvoSendMessageBatch200Response>(response);
        }

        /// <summary>
        /// Test ChatBskyConvoUnmuteConvo
        /// </summary>
        [Fact]
        public void ChatBskyConvoUnmuteConvoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChatBskyConvoLeaveConvoRequest chatBskyConvoLeaveConvoRequest = null;
            //var response = instance.ChatBskyConvoUnmuteConvo(chatBskyConvoLeaveConvoRequest);
            //Assert.IsType<ChatBskyConvoGetConvo200Response>(response);
        }

        /// <summary>
        /// Test ChatBskyConvoUpdateRead
        /// </summary>
        [Fact]
        public void ChatBskyConvoUpdateReadTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChatBskyConvoUpdateReadRequest chatBskyConvoUpdateReadRequest = null;
            //var response = instance.ChatBskyConvoUpdateRead(chatBskyConvoUpdateReadRequest);
            //Assert.IsType<ChatBskyConvoGetConvo200Response>(response);
        }
    }
}
