/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using BSky.Client;
using BSky.Api;
// uncomment below to import models
//using BSky.Model;

namespace BSky.Test.Api
{
    /// <summary>
    ///  Class for testing ChatBskyModerationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ChatBskyModerationApiTests : IDisposable
    {
        private ChatBskyModerationApi instance;

        public ChatBskyModerationApiTests()
        {
            instance = new ChatBskyModerationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ChatBskyModerationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ChatBskyModerationApi
            //Assert.IsType<ChatBskyModerationApi>(instance);
        }

        /// <summary>
        /// Test ChatBskyModerationGetActorMetadata
        /// </summary>
        [Fact]
        public void ChatBskyModerationGetActorMetadataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string actor = null;
            //var response = instance.ChatBskyModerationGetActorMetadata(actor);
            //Assert.IsType<ChatBskyModerationGetActorMetadata200Response>(response);
        }

        /// <summary>
        /// Test ChatBskyModerationGetMessageContext
        /// </summary>
        [Fact]
        public void ChatBskyModerationGetMessageContextTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string messageId = null;
            //string? convoId = null;
            //int? before = null;
            //int? after = null;
            //var response = instance.ChatBskyModerationGetMessageContext(messageId, convoId, before, after);
            //Assert.IsType<ChatBskyModerationGetMessageContext200Response>(response);
        }

        /// <summary>
        /// Test ChatBskyModerationUpdateActorAccess
        /// </summary>
        [Fact]
        public void ChatBskyModerationUpdateActorAccessTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChatBskyModerationUpdateActorAccessRequest chatBskyModerationUpdateActorAccessRequest = null;
            //instance.ChatBskyModerationUpdateActorAccess(chatBskyModerationUpdateActorAccessRequest);
        }
    }
}
