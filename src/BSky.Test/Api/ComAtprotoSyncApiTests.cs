/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using BSky.Client;
using BSky.Api;
// uncomment below to import models
//using BSky.Model;

namespace BSky.Test.Api
{
    /// <summary>
    ///  Class for testing ComAtprotoSyncApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ComAtprotoSyncApiTests : IDisposable
    {
        private ComAtprotoSyncApi instance;

        public ComAtprotoSyncApiTests()
        {
            instance = new ComAtprotoSyncApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ComAtprotoSyncApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ComAtprotoSyncApi
            //Assert.IsType<ComAtprotoSyncApi>(instance);
        }

        /// <summary>
        /// Test ComAtprotoSyncGetBlob
        /// </summary>
        [Fact]
        public void ComAtprotoSyncGetBlobTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string did = null;
            //string cid = null;
            //instance.ComAtprotoSyncGetBlob(did, cid);
        }

        /// <summary>
        /// Test ComAtprotoSyncGetBlocks
        /// </summary>
        [Fact]
        public void ComAtprotoSyncGetBlocksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string did = null;
            //List<string> cids = null;
            //instance.ComAtprotoSyncGetBlocks(did, cids);
        }

        /// <summary>
        /// Test ComAtprotoSyncGetLatestCommit
        /// </summary>
        [Fact]
        public void ComAtprotoSyncGetLatestCommitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string did = null;
            //var response = instance.ComAtprotoSyncGetLatestCommit(did);
            //Assert.IsType<ComAtprotoSyncGetLatestCommit200Response>(response);
        }

        /// <summary>
        /// Test ComAtprotoSyncGetRecord
        /// </summary>
        [Fact]
        public void ComAtprotoSyncGetRecordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string did = null;
            //string collection = null;
            //string rkey = null;
            //instance.ComAtprotoSyncGetRecord(did, collection, rkey);
        }

        /// <summary>
        /// Test ComAtprotoSyncGetRepo
        /// </summary>
        [Fact]
        public void ComAtprotoSyncGetRepoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string did = null;
            //string? since = null;
            //instance.ComAtprotoSyncGetRepo(did, since);
        }

        /// <summary>
        /// Test ComAtprotoSyncGetRepoStatus
        /// </summary>
        [Fact]
        public void ComAtprotoSyncGetRepoStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string did = null;
            //var response = instance.ComAtprotoSyncGetRepoStatus(did);
            //Assert.IsType<ComAtprotoSyncGetRepoStatus200Response>(response);
        }

        /// <summary>
        /// Test ComAtprotoSyncListBlobs
        /// </summary>
        [Fact]
        public void ComAtprotoSyncListBlobsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string did = null;
            //string? since = null;
            //int? limit = null;
            //string? cursor = null;
            //var response = instance.ComAtprotoSyncListBlobs(did, since, limit, cursor);
            //Assert.IsType<ComAtprotoSyncListBlobs200Response>(response);
        }

        /// <summary>
        /// Test ComAtprotoSyncListRepos
        /// </summary>
        [Fact]
        public void ComAtprotoSyncListReposTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //string? cursor = null;
            //var response = instance.ComAtprotoSyncListRepos(limit, cursor);
            //Assert.IsType<ComAtprotoSyncListRepos200Response>(response);
        }

        /// <summary>
        /// Test ComAtprotoSyncNotifyOfUpdate
        /// </summary>
        [Fact]
        public void ComAtprotoSyncNotifyOfUpdateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ComAtprotoSyncNotifyOfUpdateRequest comAtprotoSyncNotifyOfUpdateRequest = null;
            //instance.ComAtprotoSyncNotifyOfUpdate(comAtprotoSyncNotifyOfUpdateRequest);
        }

        /// <summary>
        /// Test ComAtprotoSyncRequestCrawl
        /// </summary>
        [Fact]
        public void ComAtprotoSyncRequestCrawlTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ComAtprotoSyncRequestCrawlRequest comAtprotoSyncRequestCrawlRequest = null;
            //instance.ComAtprotoSyncRequestCrawl(comAtprotoSyncRequestCrawlRequest);
        }
    }
}
