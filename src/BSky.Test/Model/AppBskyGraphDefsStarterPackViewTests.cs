/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BSky.Model;
using BSky.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BSky.Test.Model
{
    /// <summary>
    ///  Class for testing AppBskyGraphDefsStarterPackView
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AppBskyGraphDefsStarterPackViewTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AppBskyGraphDefsStarterPackView
        //private AppBskyGraphDefsStarterPackView instance;

        public AppBskyGraphDefsStarterPackViewTests()
        {
            // TODO uncomment below to create an instance of AppBskyGraphDefsStarterPackView
            //instance = new AppBskyGraphDefsStarterPackView();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AppBskyGraphDefsStarterPackView
        /// </summary>
        [Fact]
        public void AppBskyGraphDefsStarterPackViewInstanceTest()
        {
            // TODO uncomment below to test "IsType" AppBskyGraphDefsStarterPackView
            //Assert.IsType<AppBskyGraphDefsStarterPackView>(instance);
        }

        /// <summary>
        /// Test the property 'Uri'
        /// </summary>
        [Fact]
        public void UriTest()
        {
            // TODO unit test for the property 'Uri'
        }

        /// <summary>
        /// Test the property 'Cid'
        /// </summary>
        [Fact]
        public void CidTest()
        {
            // TODO unit test for the property 'Cid'
        }

        /// <summary>
        /// Test the property 'Record'
        /// </summary>
        [Fact]
        public void RecordTest()
        {
            // TODO unit test for the property 'Record'
        }

        /// <summary>
        /// Test the property 'Creator'
        /// </summary>
        [Fact]
        public void CreatorTest()
        {
            // TODO unit test for the property 'Creator'
        }

        /// <summary>
        /// Test the property 'List'
        /// </summary>
        [Fact]
        public void ListTest()
        {
            // TODO unit test for the property 'List'
        }

        /// <summary>
        /// Test the property 'ListItemsSample'
        /// </summary>
        [Fact]
        public void ListItemsSampleTest()
        {
            // TODO unit test for the property 'ListItemsSample'
        }

        /// <summary>
        /// Test the property 'Feeds'
        /// </summary>
        [Fact]
        public void FeedsTest()
        {
            // TODO unit test for the property 'Feeds'
        }

        /// <summary>
        /// Test the property 'JoinedWeekCount'
        /// </summary>
        [Fact]
        public void JoinedWeekCountTest()
        {
            // TODO unit test for the property 'JoinedWeekCount'
        }

        /// <summary>
        /// Test the property 'JoinedAllTimeCount'
        /// </summary>
        [Fact]
        public void JoinedAllTimeCountTest()
        {
            // TODO unit test for the property 'JoinedAllTimeCount'
        }

        /// <summary>
        /// Test the property 'Labels'
        /// </summary>
        [Fact]
        public void LabelsTest()
        {
            // TODO unit test for the property 'Labels'
        }

        /// <summary>
        /// Test the property 'IndexedAt'
        /// </summary>
        [Fact]
        public void IndexedAtTest()
        {
            // TODO unit test for the property 'IndexedAt'
        }
    }
}
