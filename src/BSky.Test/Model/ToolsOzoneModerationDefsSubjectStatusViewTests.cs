/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BSky.Model;
using BSky.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BSky.Test.Model
{
    /// <summary>
    ///  Class for testing ToolsOzoneModerationDefsSubjectStatusView
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ToolsOzoneModerationDefsSubjectStatusViewTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ToolsOzoneModerationDefsSubjectStatusView
        //private ToolsOzoneModerationDefsSubjectStatusView instance;

        public ToolsOzoneModerationDefsSubjectStatusViewTests()
        {
            // TODO uncomment below to create an instance of ToolsOzoneModerationDefsSubjectStatusView
            //instance = new ToolsOzoneModerationDefsSubjectStatusView();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ToolsOzoneModerationDefsSubjectStatusView
        /// </summary>
        [Fact]
        public void ToolsOzoneModerationDefsSubjectStatusViewInstanceTest()
        {
            // TODO uncomment below to test "IsType" ToolsOzoneModerationDefsSubjectStatusView
            //Assert.IsType<ToolsOzoneModerationDefsSubjectStatusView>(instance);
        }

        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Fact]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }

        /// <summary>
        /// Test the property 'Subject'
        /// </summary>
        [Fact]
        public void SubjectTest()
        {
            // TODO unit test for the property 'Subject'
        }

        /// <summary>
        /// Test the property 'SubjectBlobCids'
        /// </summary>
        [Fact]
        public void SubjectBlobCidsTest()
        {
            // TODO unit test for the property 'SubjectBlobCids'
        }

        /// <summary>
        /// Test the property 'SubjectRepoHandle'
        /// </summary>
        [Fact]
        public void SubjectRepoHandleTest()
        {
            // TODO unit test for the property 'SubjectRepoHandle'
        }

        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Fact]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }

        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Fact]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }

        /// <summary>
        /// Test the property 'ReviewState'
        /// </summary>
        [Fact]
        public void ReviewStateTest()
        {
            // TODO unit test for the property 'ReviewState'
        }

        /// <summary>
        /// Test the property 'Comment'
        /// </summary>
        [Fact]
        public void CommentTest()
        {
            // TODO unit test for the property 'Comment'
        }

        /// <summary>
        /// Test the property 'MuteUntil'
        /// </summary>
        [Fact]
        public void MuteUntilTest()
        {
            // TODO unit test for the property 'MuteUntil'
        }

        /// <summary>
        /// Test the property 'MuteReportingUntil'
        /// </summary>
        [Fact]
        public void MuteReportingUntilTest()
        {
            // TODO unit test for the property 'MuteReportingUntil'
        }

        /// <summary>
        /// Test the property 'LastReviewedBy'
        /// </summary>
        [Fact]
        public void LastReviewedByTest()
        {
            // TODO unit test for the property 'LastReviewedBy'
        }

        /// <summary>
        /// Test the property 'LastReviewedAt'
        /// </summary>
        [Fact]
        public void LastReviewedAtTest()
        {
            // TODO unit test for the property 'LastReviewedAt'
        }

        /// <summary>
        /// Test the property 'LastReportedAt'
        /// </summary>
        [Fact]
        public void LastReportedAtTest()
        {
            // TODO unit test for the property 'LastReportedAt'
        }

        /// <summary>
        /// Test the property 'LastAppealedAt'
        /// </summary>
        [Fact]
        public void LastAppealedAtTest()
        {
            // TODO unit test for the property 'LastAppealedAt'
        }

        /// <summary>
        /// Test the property 'Takendown'
        /// </summary>
        [Fact]
        public void TakendownTest()
        {
            // TODO unit test for the property 'Takendown'
        }

        /// <summary>
        /// Test the property 'Appealed'
        /// </summary>
        [Fact]
        public void AppealedTest()
        {
            // TODO unit test for the property 'Appealed'
        }

        /// <summary>
        /// Test the property 'SuspendUntil'
        /// </summary>
        [Fact]
        public void SuspendUntilTest()
        {
            // TODO unit test for the property 'SuspendUntil'
        }

        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Fact]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }
    }
}
