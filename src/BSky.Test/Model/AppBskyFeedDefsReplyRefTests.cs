/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BSky.Model;
using BSky.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BSky.Test.Model
{
    /// <summary>
    ///  Class for testing AppBskyFeedDefsReplyRef
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AppBskyFeedDefsReplyRefTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AppBskyFeedDefsReplyRef
        //private AppBskyFeedDefsReplyRef instance;

        public AppBskyFeedDefsReplyRefTests()
        {
            // TODO uncomment below to create an instance of AppBskyFeedDefsReplyRef
            //instance = new AppBskyFeedDefsReplyRef();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AppBskyFeedDefsReplyRef
        /// </summary>
        [Fact]
        public void AppBskyFeedDefsReplyRefInstanceTest()
        {
            // TODO uncomment below to test "IsType" AppBskyFeedDefsReplyRef
            //Assert.IsType<AppBskyFeedDefsReplyRef>(instance);
        }

        /// <summary>
        /// Test the property 'Root'
        /// </summary>
        [Fact]
        public void RootTest()
        {
            // TODO unit test for the property 'Root'
        }

        /// <summary>
        /// Test the property 'Parent'
        /// </summary>
        [Fact]
        public void ParentTest()
        {
            // TODO unit test for the property 'Parent'
        }

        /// <summary>
        /// Test the property 'GrandparentAuthor'
        /// </summary>
        [Fact]
        public void GrandparentAuthorTest()
        {
            // TODO unit test for the property 'GrandparentAuthor'
        }
    }
}
