/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = BSky.Client.OpenAPIDateConverter;

namespace BSky.Model
{
    /// <summary>
    /// AppBskyFeedThreadgate
    /// </summary>
    [DataContract(Name = "app.bsky.feed.threadgate")]
    public partial class AppBskyFeedThreadgate : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppBskyFeedThreadgate" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AppBskyFeedThreadgate() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AppBskyFeedThreadgate" /> class.
        /// </summary>
        /// <param name="post">Reference (AT-URI) to the post record. (required).</param>
        /// <param name="allow">allow.</param>
        /// <param name="createdAt">createdAt (required).</param>
        /// <param name="hiddenReplies">hiddenReplies.</param>
        public AppBskyFeedThreadgate(string post = default(string), List<AppBskyFeedThreadgateAllowInner> allow = default(List<AppBskyFeedThreadgateAllowInner>), DateTime createdAt = default(DateTime), List<string> hiddenReplies = default(List<string>))
        {
            // to ensure "post" is required (not null)
            if (post == null)
            {
                throw new ArgumentNullException("post is a required property for AppBskyFeedThreadgate and cannot be null");
            }
            this.Post = post;
            this.CreatedAt = createdAt;
            this.Allow = allow;
            this.HiddenReplies = hiddenReplies;
        }

        /// <summary>
        /// Reference (AT-URI) to the post record.
        /// </summary>
        /// <value>Reference (AT-URI) to the post record.</value>
        [DataMember(Name = "post", IsRequired = true, EmitDefaultValue = true)]
        public string Post { get; set; }

        /// <summary>
        /// Gets or Sets Allow
        /// </summary>
        [DataMember(Name = "allow", EmitDefaultValue = false)]
        public List<AppBskyFeedThreadgateAllowInner> Allow { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "createdAt", IsRequired = true, EmitDefaultValue = true)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets HiddenReplies
        /// </summary>
        [DataMember(Name = "hiddenReplies", EmitDefaultValue = false)]
        public List<string> HiddenReplies { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AppBskyFeedThreadgate {\n");
            sb.Append("  Post: ").Append(Post).Append("\n");
            sb.Append("  Allow: ").Append(Allow).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  HiddenReplies: ").Append(HiddenReplies).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
