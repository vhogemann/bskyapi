/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = BSky.Client.OpenAPIDateConverter;

namespace BSky.Model
{
    /// <summary>
    /// AppBskyActorDefsFeedViewPref
    /// </summary>
    [DataContract(Name = "app.bsky.actor.defs.feedViewPref")]
    public partial class AppBskyActorDefsFeedViewPref : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AppBskyActorDefsFeedViewPref" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AppBskyActorDefsFeedViewPref() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AppBskyActorDefsFeedViewPref" /> class.
        /// </summary>
        /// <param name="feed">The URI of the feed, or an identifier which describes the feed. (required).</param>
        /// <param name="hideReplies">Hide replies in the feed..</param>
        /// <param name="hideRepliesByUnfollowed">Hide replies in the feed if they are not by followed users. (default to true).</param>
        /// <param name="hideRepliesByLikeCount">hideRepliesByLikeCount.</param>
        /// <param name="hideReposts">Hide reposts in the feed..</param>
        /// <param name="hideQuotePosts">Hide quote posts in the feed..</param>
        public AppBskyActorDefsFeedViewPref(string feed = default(string), bool hideReplies = default(bool), bool hideRepliesByUnfollowed = true, int hideRepliesByLikeCount = default(int), bool hideReposts = default(bool), bool hideQuotePosts = default(bool))
        {
            // to ensure "feed" is required (not null)
            if (feed == null)
            {
                throw new ArgumentNullException("feed is a required property for AppBskyActorDefsFeedViewPref and cannot be null");
            }
            this.Feed = feed;
            this.HideReplies = hideReplies;
            this.HideRepliesByUnfollowed = hideRepliesByUnfollowed;
            this.HideRepliesByLikeCount = hideRepliesByLikeCount;
            this.HideReposts = hideReposts;
            this.HideQuotePosts = hideQuotePosts;
        }

        /// <summary>
        /// The URI of the feed, or an identifier which describes the feed.
        /// </summary>
        /// <value>The URI of the feed, or an identifier which describes the feed.</value>
        [DataMember(Name = "feed", IsRequired = true, EmitDefaultValue = true)]
        public string Feed { get; set; }

        /// <summary>
        /// Hide replies in the feed.
        /// </summary>
        /// <value>Hide replies in the feed.</value>
        [DataMember(Name = "hideReplies", EmitDefaultValue = true)]
        public bool HideReplies { get; set; }

        /// <summary>
        /// Hide replies in the feed if they are not by followed users.
        /// </summary>
        /// <value>Hide replies in the feed if they are not by followed users.</value>
        [DataMember(Name = "hideRepliesByUnfollowed", EmitDefaultValue = true)]
        public bool HideRepliesByUnfollowed { get; set; }

        /// <summary>
        /// Gets or Sets HideRepliesByLikeCount
        /// </summary>
        [DataMember(Name = "hideRepliesByLikeCount", EmitDefaultValue = false)]
        public int HideRepliesByLikeCount { get; set; }

        /// <summary>
        /// Hide reposts in the feed.
        /// </summary>
        /// <value>Hide reposts in the feed.</value>
        [DataMember(Name = "hideReposts", EmitDefaultValue = true)]
        public bool HideReposts { get; set; }

        /// <summary>
        /// Hide quote posts in the feed.
        /// </summary>
        /// <value>Hide quote posts in the feed.</value>
        [DataMember(Name = "hideQuotePosts", EmitDefaultValue = true)]
        public bool HideQuotePosts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AppBskyActorDefsFeedViewPref {\n");
            sb.Append("  Feed: ").Append(Feed).Append("\n");
            sb.Append("  HideReplies: ").Append(HideReplies).Append("\n");
            sb.Append("  HideRepliesByUnfollowed: ").Append(HideRepliesByUnfollowed).Append("\n");
            sb.Append("  HideRepliesByLikeCount: ").Append(HideRepliesByLikeCount).Append("\n");
            sb.Append("  HideReposts: ").Append(HideReposts).Append("\n");
            sb.Append("  HideQuotePosts: ").Append(HideQuotePosts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
