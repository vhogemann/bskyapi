/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = BSky.Client.OpenAPIDateConverter;

namespace BSky.Model
{
    /// <summary>
    /// ToolsOzoneCommunicationDefsTemplateView
    /// </summary>
    [DataContract(Name = "tools.ozone.communication.defs.templateView")]
    public partial class ToolsOzoneCommunicationDefsTemplateView : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ToolsOzoneCommunicationDefsTemplateView" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ToolsOzoneCommunicationDefsTemplateView() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ToolsOzoneCommunicationDefsTemplateView" /> class.
        /// </summary>
        /// <param name="id">id (required).</param>
        /// <param name="name">Name of the template. (required).</param>
        /// <param name="subject">Content of the template, can contain markdown and variable placeholders..</param>
        /// <param name="contentMarkdown">Subject of the message, used in emails. (required).</param>
        /// <param name="disabled">disabled (required).</param>
        /// <param name="lang">Message language..</param>
        /// <param name="lastUpdatedBy">DID of the user who last updated the template. (required).</param>
        /// <param name="createdAt">createdAt (required).</param>
        /// <param name="updatedAt">updatedAt (required).</param>
        public ToolsOzoneCommunicationDefsTemplateView(string id = default(string), string name = default(string), string subject = default(string), string contentMarkdown = default(string), bool disabled = default(bool), string lang = default(string), string lastUpdatedBy = default(string), DateTime createdAt = default(DateTime), DateTime updatedAt = default(DateTime))
        {
            // to ensure "id" is required (not null)
            if (id == null)
            {
                throw new ArgumentNullException("id is a required property for ToolsOzoneCommunicationDefsTemplateView and cannot be null");
            }
            this.Id = id;
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new ArgumentNullException("name is a required property for ToolsOzoneCommunicationDefsTemplateView and cannot be null");
            }
            this.Name = name;
            // to ensure "contentMarkdown" is required (not null)
            if (contentMarkdown == null)
            {
                throw new ArgumentNullException("contentMarkdown is a required property for ToolsOzoneCommunicationDefsTemplateView and cannot be null");
            }
            this.ContentMarkdown = contentMarkdown;
            this.Disabled = disabled;
            // to ensure "lastUpdatedBy" is required (not null)
            if (lastUpdatedBy == null)
            {
                throw new ArgumentNullException("lastUpdatedBy is a required property for ToolsOzoneCommunicationDefsTemplateView and cannot be null");
            }
            this.LastUpdatedBy = lastUpdatedBy;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
            this.Subject = subject;
            this.Lang = lang;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", IsRequired = true, EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Name of the template.
        /// </summary>
        /// <value>Name of the template.</value>
        [DataMember(Name = "name", IsRequired = true, EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Content of the template, can contain markdown and variable placeholders.
        /// </summary>
        /// <value>Content of the template, can contain markdown and variable placeholders.</value>
        [DataMember(Name = "subject", EmitDefaultValue = false)]
        public string Subject { get; set; }

        /// <summary>
        /// Subject of the message, used in emails.
        /// </summary>
        /// <value>Subject of the message, used in emails.</value>
        [DataMember(Name = "contentMarkdown", IsRequired = true, EmitDefaultValue = true)]
        public string ContentMarkdown { get; set; }

        /// <summary>
        /// Gets or Sets Disabled
        /// </summary>
        [DataMember(Name = "disabled", IsRequired = true, EmitDefaultValue = true)]
        public bool Disabled { get; set; }

        /// <summary>
        /// Message language.
        /// </summary>
        /// <value>Message language.</value>
        [DataMember(Name = "lang", EmitDefaultValue = false)]
        public string Lang { get; set; }

        /// <summary>
        /// DID of the user who last updated the template.
        /// </summary>
        /// <value>DID of the user who last updated the template.</value>
        [DataMember(Name = "lastUpdatedBy", IsRequired = true, EmitDefaultValue = true)]
        public string LastUpdatedBy { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "createdAt", IsRequired = true, EmitDefaultValue = true)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name = "updatedAt", IsRequired = true, EmitDefaultValue = true)]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ToolsOzoneCommunicationDefsTemplateView {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Subject: ").Append(Subject).Append("\n");
            sb.Append("  ContentMarkdown: ").Append(ContentMarkdown).Append("\n");
            sb.Append("  Disabled: ").Append(Disabled).Append("\n");
            sb.Append("  Lang: ").Append(Lang).Append("\n");
            sb.Append("  LastUpdatedBy: ").Append(LastUpdatedBy).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
