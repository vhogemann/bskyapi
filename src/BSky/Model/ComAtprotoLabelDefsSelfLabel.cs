/*
 * AT Protocol XRPC API
 *
 * This section contains HTTP API reference docs for Bluesky and AT Protocol lexicons. Generate a bearer token to test API calls directly from the docs.
 *
 * The version of the OpenAPI document: 0.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = BSky.Client.OpenAPIDateConverter;

namespace BSky.Model
{
    /// <summary>
    /// Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel.
    /// </summary>
    [DataContract(Name = "com.atproto.label.defs.selfLabel")]
    public partial class ComAtprotoLabelDefsSelfLabel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAtprotoLabelDefsSelfLabel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ComAtprotoLabelDefsSelfLabel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ComAtprotoLabelDefsSelfLabel" /> class.
        /// </summary>
        /// <param name="val">The short string name of the value or type of this label. (required).</param>
        public ComAtprotoLabelDefsSelfLabel(string val = default(string))
        {
            // to ensure "val" is required (not null)
            if (val == null)
            {
                throw new ArgumentNullException("val is a required property for ComAtprotoLabelDefsSelfLabel and cannot be null");
            }
            this.Val = val;
        }

        /// <summary>
        /// The short string name of the value or type of this label.
        /// </summary>
        /// <value>The short string name of the value or type of this label.</value>
        [DataMember(Name = "val", IsRequired = true, EmitDefaultValue = true)]
        public string Val { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ComAtprotoLabelDefsSelfLabel {\n");
            sb.Append("  Val: ").Append(Val).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // Val (string) maxLength
            if (this.Val != null && this.Val.Length > 128)
            {
                yield return new ValidationResult("Invalid value for Val, length must be less than 128.", new [] { "Val" });
            }

            yield break;
        }
    }

}
